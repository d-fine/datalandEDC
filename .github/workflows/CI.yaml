name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'


jobs:

  unit-tests:
    runs-on: ubuntu-latest
    #if: always()
    #if: github.event_name != 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Check formatting and code convention by using base image from GitHub Registry
#        run: |
#          docker run -e SONAR_TOKEN=$SONAR_TOKEN -v $(pwd):/app:rw ghcr.io/d-fine/datalandedc/edcdummyserver:latest \
#          /app/gradlew -p /app ktlintcheck detekt dataland-edc-dummyserver:test api:test jacocoTestReport sonarqube --no-daemon
#          ls -R
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      run: ./gradlew assemble test jacocoTestReport sonarqube --no-daemon
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: TestReport
          path: ./**/build/reports

#      - name: Upload JaCoCo EDC Dummy Server Results
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: JaCoCoEDCDummyUnitTests
#          path: ./*/build/jacoco/*.exec
#      - name: Upload JaCoCo API Results
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: JaCoCoAPIUnitTests
#          path: ./api/build/jacoco/*.exec
#  sonar:
#    runs-on: ubuntu-latest
#    if: always()
#    needs:
#      - unit-tests
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          submodules: true
#      - uses: actions/setup-java@v2
#        with:
#          distribution: temurin
#          java-version: 17
#          cache: gradle
#      - name: Build project
#        run: ./gradlew assemble --no-daemon
#      - uses: actions/download-artifact@v2
#        with:
#          name: JaCoCoEDCDummyUnitTests
#      - uses: actions/download-artifact@v2
#        with:
#          name: JaCoCoAPIUnitTests
#      - name: Generate jacocoTestReport and run Sonar
#        if: always()
#        run: |
#          ./gradlew jacocoTestReport --no-daemon
#          ls -R
#          ./gradlew sonarqube --no-daemon
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  summary:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Summary of this workflow's overall outcome
        run: exit 0
