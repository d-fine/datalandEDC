name: EDC

on:
  push:
    tags:
      - 'RELEASE-**'

jobs:
  build-and-publish-edc-server-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: log inputs
        shell: bash
        run: |
          mkdir -p logs/$GITHUB_JOB
          echo '${{ toJSON(inputs) }}' > logs/$GITHUB_JOB/inputs.log
          env > logs/$GITHUB_JOB/env.log
          echo '${{ toJSON(secrets) }}' > logs/$GITHUB_JOB/secrets.log
          echo '${{ toJSON(matrix) }}' > logs/$GITHUB_JOB/matrix.log
          echo '${{ toJSON(github) }}' > logs/$GITHUB_JOB/github.log
      - name: Store env and secrets
        uses: actions/upload-artifact@v3
        with:
          name: parameters
          path: ./logs/
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build DataSpaceConnector
        run: |
          ./EDC/gradlew -Pskip.signing=true -p ./EDC publishToMavenLocal
          ./EDCGradlePlugins/gradlew -Pskip.signing=true -p ./EDCGradlePlugins publishToMavenLocal
      - name: Build jars and publish EDC client
        run: ./gradlew :dataland-edc-dummyserver:bootJar :dataland-edc-server:assemble :dataland-edc-client:publish --no-daemon --stacktrace
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: $GITHUB_ACTOR
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Get edcdummyserver version for the RELEASE tags without prefix
        id: metaEdcdummyserver
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/d-fine/datalandedc/edcdummyserver
          tags: type=match,pattern=RELEASE-(.*),group=1
      - name: Build the edc dummy server image and push it to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: ./dataland-edc-dummyserver
          tags: ${{steps.metaEdcdummyserver.outputs.tags}}
          push: true
      - name: Get edcserver version for the RELEASE tags without prefix
        id: metaEdcserver
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/d-fine/datalandedc/edcserver
          tags: type=match,pattern=RELEASE-(.*),group=1
      - name: Build the edc real server image and push it to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: ./dataland-edc-server
          tags: ${{steps.metaEdcserver.outputs.tags}}
          push: true
